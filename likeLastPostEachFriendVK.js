/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ª–∞–π–∫–∏–Ω–≥–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç–æ–≤ –¥—Ä—É–∑–µ–π –í–ö–æ–Ω—Ç–∞–∫—Ç–µ üëç
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∞–≤–∏—Ç –ª–∞–π–∫–∏ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–≤–∞ –ø–æ—Å—Ç–∞ –≤–∞—à–∏—Ö –¥—Ä—É–∑–µ–π –≤ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.
 * –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é, —Å–æ–±–ª—é–¥–∞–π—Ç–µ –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤ API –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –∏ –Ω–µ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª—è–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π.
 * 
 * –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: https://habr.com/ru/articles/871966/
 *
 * @author Mikhail Shardin [–ú–∏—Ö–∞–∏–ª –®–∞—Ä–¥–∏–Ω] 
 * @site https://shardin.name/
 * 
 * @version 1.1
 * @since 2025-01-08
 */

const {
    VK
} = require('vk-io');
const fs = require('fs');
const readline = require('readline'); // –î–ª—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

const credentialsFile = './secret/credentials.json';
const credentialsData = JSON.parse(fs.readFileSync(credentialsFile, 'utf-8'));

const vk = new VK({
    token: credentialsData.accessToken // –í–∞—à —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –∏–∑ —Ñ–∞–π–ª–∞ 
});

async function likeLastPosts() {
    const {
        default: delay
    } = await import('delay');

    try {
        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥—Ä—É–∑–µ–π
        const friends = await vk.api.friends.get({
            fields: 'nickname', // –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞
            order: 'hints' // hints - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥—Ä—É–∑—å—è, name - –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É. –ú–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å, —Ç–æ–≥–¥–∞ –±—É–¥–µ—Ç –≤ –ø–æ—Ä—è–¥–∫–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
        });
        const friendIds = friends.items.map(friend => friend.id);

        console.log(`–ù–∞–π–¥–µ–Ω–æ ${friendIds.length} –¥—Ä—É–∑–µ–π.`);

        const [me] = await vk.api.users.get({});
        console.log(`–ú–æ–π ID: https://vk.com/id${me.id}`);

        let actionCounter = 1; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏–π
        let likeCounter = 0;

        for (const friendId of friendIds) {
            try {
                // –ü–æ–ª—É—á–∞–µ–º –¥–≤–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç–∞ –¥—Ä—É–≥–∞
                const wall = await vk.api.wall.get({
                    owner_id: friendId,
                    count: 2 // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–≤–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç–∞
                });

                if (wall.items.length > 0) {
                    for (const post of wall.items) { // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É –ø–æ—Å—Ç—É –∏–∑ –≤—ã–±–æ—Ä–∫–∏

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ª–∞–π–∫–∞–ª–∏ –ª–∏ –º—ã —É–∂–µ —ç—Ç–æ—Ç –ø–æ—Å—Ç
                        const likes = await vk.api.likes.getList({
                            type: 'post',
                            owner_id: post.owner_id,
                            item_id: post.id,
                            filter: 'likes'
                        });

                        if (!likes.items.includes(me.id)) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—É—â–µ–≥–æ userId –≤ —Å–ø–∏—Å–∫–µ –ª–∞–π–∫–Ω—É–≤—à–∏—Ö
                            // –°—Ç–∞–≤–∏–º –ª–∞–π–∫
                            await vk.api.likes.add({
                                type: 'post',
                                owner_id: post.owner_id,
                                item_id: post.id
                            });
                            console.log(`${actionCounter} –∏–∑ ${friendIds.length}: –ø–æ—Å—Ç–∞–≤–∏–ª –ª–∞–π–∫ –Ω–∞ –ø–æ—Å—Ç https://vk.com/id${friendId}?w=wall${friendId}_${post.id} üëç`);
                            likeCounter++;
                        } else {
                            console.log(`${actionCounter} –∏–∑ ${friendIds.length}: –ø–æ—Å—Ç https://vk.com/id${friendId}?w=wall${friendId}_${post.id} —É–∂–µ –ª–∞–π–∫–Ω—É—Ç`);
                        }
                    }
                } else {
                    console.log(`${actionCounter} –∏–∑ ${friendIds.length}: —É –¥—Ä—É–≥–∞ https://vk.com/id${friendId} –Ω–µ—Ç –ø–æ—Å—Ç–æ–≤.`);
                }

                actionCounter++;

                // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–∞–Ω–∞
                await delay(1200); // 1200–º—Å = 2 —Å–µ–∫—É–Ω–¥—ã,  60000–º—Å / 50 –∑–∞–ø—Ä–æ—Å–æ–≤ = 1200–º—Å –Ω–∞ –∑–∞–ø—Ä–æ—Å

            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥—Ä—É–≥–∞ ${friendId}:`, error);
            }
        }

        console.log(`\n–ü—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –ª–∞–π–∫–æ–≤: ${likeCounter}, –∞ –≤—Å–µ–≥–æ –≤ —Å–ø–∏—Å–∫–µ –±—ã–ª–æ ${friendIds.length} –¥—Ä—É–∑–µ–π.`);

        // –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º
        const rl = readline.createInterface({
            input: process.stdin,
            output: process.stdout
        });

        rl.question('–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏...\n', () => {
            rl.close();
        });

    } catch (error) {
        console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    }
}

likeLastPosts();