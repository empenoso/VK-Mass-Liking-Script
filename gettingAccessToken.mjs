/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è VK API üîë
 * 
 *  –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å VK API.
 *  –û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ª–∞–π–∫–æ–≤ –Ω–∞ –ø–æ—Å—Ç—ã –¥—Ä—É–∑–µ–π.
 * 
 *  ‚ö†Ô∏è –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–π—Ç–µ —Ç–æ–∫–µ–Ω –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ. –•—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ.
 *
 * @author Mikhail Shardin [–ú–∏—Ö–∞–∏–ª –®–∞—Ä–¥–∏–Ω] 
 * @site https://shardin.name/
 * 
 * @version 1.0
 * @since 2025-01-08
 */

// node "d:\SynologyDrive\docs\2025_01_VK-Mass-Liking-Script\gettingAccessToken.mjs"

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import { CallbackService } from 'vk-io';
import { DirectAuthorization, officialAppCredentials } from '@vk-io/authorization';
import readline from 'readline';
import credentials from './secret/credentials.js';
import * as fs from 'fs'; 
import { fileURLToPath } from 'url';
import path from 'path';

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–æ–Ω—Å–æ–ª–∏
const readLine = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä CallbackService –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
const callbackService = new CallbackService();

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
callbackService.onTwoFactor((payload, retry) => {
    console.log('–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.');
    readLine.question('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ', (answer) => {
        retry(answer)
            .then(() => {
                console.log('–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
            })
            .catch((error) => {
                console.error('–û—à–∏–±–∫–∞ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error.message);
            });
    });
});

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä DirectAuthorization –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const direct = new DirectAuthorization({
    callbackService,
    ...officialAppCredentials.android, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Android
    scope: 'all', // –í—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
    login: credentials.login, // –õ–æ–≥–∏–Ω –∏–∑ —Ñ–∞–π–ª–∞
    password: credentials.password, // –ü–∞—Ä–æ–ª—å –∏–∑ —Ñ–∞–π–ª–∞
    apiVersion: '5.199' // –í–µ—Ä—Å–∏—è API –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
});

(async () => {
    try {
        console.log('–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');

        // –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        const response = await direct.run();

        console.log('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        console.log('–¢–æ–∫–µ–Ω:', response.token);
        console.log('–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞:', response.expires);
        console.log('Email:', response.email);
        console.log('ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', response.userId);


        // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω –≤ —Ñ–∞–π–ª–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, credentials.json):
        const __filename = fileURLToPath(import.meta.url);  // –ü–æ–ª—É—á–∏—Ç—å –∏–º—è —Ñ–∞–π–ª–∞
        const __dirname = path.dirname(__filename);        // –ü–æ–ª—É—á–∏—Ç—å –∏–º—è –∫–∞—Ç–∞–ª–æ–≥–∞
        const credentialsFile = path.join(__dirname, 'secret', 'credentials.json'); 
        const credentialsData = {
            accessToken: response.token,
            expires: response.expires,
            userId: response.userId,
            email: response.email 
        };

        fs.writeFileSync(credentialsFile, JSON.stringify(credentialsData, null, 2)); 

        console.log(`–¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ${credentialsFile}`);

    } catch (error) {
        console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error.message);
    } finally {
        readLine.close();
    }
})();
